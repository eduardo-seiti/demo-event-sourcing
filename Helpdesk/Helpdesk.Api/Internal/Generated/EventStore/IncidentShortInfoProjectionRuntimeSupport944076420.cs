// <auto-generated/>
#pragma warning disable
using Helpdesk.Api.Incidents.GetIncidentShortInfo;
using Marten;
using Marten.Events.Aggregation;
using Marten.Internal.Storage;
using System;
using System.Linq;

namespace Marten.Generated.EventStore
{
    // START: IncidentShortInfoProjectionLiveAggregation944076420
    public class IncidentShortInfoProjectionLiveAggregation944076420 : Marten.Events.Aggregation.SyncLiveAggregatorBase<Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo>
    {
        private readonly Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfoProjection _incidentShortInfoProjection;

        public IncidentShortInfoProjectionLiveAggregation944076420(Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfoProjection incidentShortInfoProjection)
        {
            _incidentShortInfoProjection = incidentShortInfoProjection;
        }



        public override Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo Build(System.Collections.Generic.IReadOnlyList<Marten.Events.IEvent> events, Marten.IQuerySession session, Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo snapshot)
        {
            if (!events.Any()) return null;
            Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo incidentShortInfo = null;
            var usedEventOnCreate = snapshot is null;
            snapshot ??= Create(events[0], session);;
            if (snapshot is null)
            {
                usedEventOnCreate = false;
                snapshot = CreateDefault(events[0]);
            }

            foreach (var @event in events.Skip(usedEventOnCreate ? 1 : 0))
            {
                snapshot = Apply(@event, snapshot, session);
            }

            return snapshot;
        }


        public Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo Create(Marten.Events.IEvent @event, Marten.IQuerySession session)
        {
            switch (@event)
            {
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.IncidentLogged> event_IncidentLogged37:
                    return Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfoProjection.Create(event_IncidentLogged37.Data);
                    break;
            }

            return null;
        }


        public Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo Apply(Marten.Events.IEvent @event, Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo aggregate, Marten.IQuerySession session)
        {
            switch (@event)
            {
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.AgentRespondedToIncident> event_AgentRespondedToIncident40:
                    aggregate = _incidentShortInfoProjection.Apply(event_AgentRespondedToIncident40.Data, aggregate);
                    break;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.CustomerRespondedToIncident> event_CustomerRespondedToIncident41:
                    aggregate = _incidentShortInfoProjection.Apply(event_CustomerRespondedToIncident41.Data, aggregate);
                    break;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.IncidentCategorised> event_IncidentCategorised38:
                    aggregate = _incidentShortInfoProjection.Apply(event_IncidentCategorised38.Data, aggregate);
                    break;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.IncidentClosed> event_IncidentClosed44:
                    aggregate = _incidentShortInfoProjection.Apply(event_IncidentClosed44.Data, aggregate);
                    break;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.IncidentPrioritised> event_IncidentPrioritised39:
                    aggregate = _incidentShortInfoProjection.Apply(event_IncidentPrioritised39.Data, aggregate);
                    break;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.IncidentResolved> event_IncidentResolved42:
                    aggregate = _incidentShortInfoProjection.Apply(event_IncidentResolved42.Data, aggregate);
                    break;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.ResolutionAcknowledgedByCustomer> event_ResolutionAcknowledgedByCustomer43:
                    aggregate = _incidentShortInfoProjection.Apply(event_ResolutionAcknowledgedByCustomer43.Data, aggregate);
                    break;
            }

            return aggregate;
        }

    }

    // END: IncidentShortInfoProjectionLiveAggregation944076420
    
    
    // START: IncidentShortInfoProjectionInlineHandler944076420
    public class IncidentShortInfoProjectionInlineHandler944076420 : Marten.Events.Aggregation.AggregationRuntime<Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo, System.Guid>
    {
        private readonly Marten.IDocumentStore _store;
        private readonly Marten.Events.Aggregation.IAggregateProjection _projection;
        private readonly Marten.Events.Aggregation.IEventSlicer<Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo, System.Guid> _slicer;
        private readonly Marten.Internal.Storage.IDocumentStorage<Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo, System.Guid> _storage;
        private readonly Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfoProjection _incidentShortInfoProjection;

        public IncidentShortInfoProjectionInlineHandler944076420(Marten.IDocumentStore store, Marten.Events.Aggregation.IAggregateProjection projection, Marten.Events.Aggregation.IEventSlicer<Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo, System.Guid> slicer, Marten.Internal.Storage.IDocumentStorage<Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo, System.Guid> storage, Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfoProjection incidentShortInfoProjection) : base(store, projection, slicer, storage)
        {
            _store = store;
            _projection = projection;
            _slicer = slicer;
            _storage = storage;
            _incidentShortInfoProjection = incidentShortInfoProjection;
        }



        public override async System.Threading.Tasks.ValueTask<Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo> ApplyEvent(Marten.IQuerySession session, Marten.Events.Projections.EventSlice<Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo, System.Guid> slice, Marten.Events.IEvent evt, Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo aggregate, System.Threading.CancellationToken cancellationToken)
        {
            switch (evt)
            {
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.AgentRespondedToIncident> event_AgentRespondedToIncident48:
                    aggregate ??= CreateDefault(evt);
                    aggregate = _incidentShortInfoProjection.Apply(event_AgentRespondedToIncident48.Data, aggregate);
                    return aggregate;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.CustomerRespondedToIncident> event_CustomerRespondedToIncident49:
                    aggregate ??= CreateDefault(evt);
                    aggregate = _incidentShortInfoProjection.Apply(event_CustomerRespondedToIncident49.Data, aggregate);
                    return aggregate;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.IncidentCategorised> event_IncidentCategorised46:
                    aggregate ??= CreateDefault(evt);
                    aggregate = _incidentShortInfoProjection.Apply(event_IncidentCategorised46.Data, aggregate);
                    return aggregate;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.IncidentClosed> event_IncidentClosed52:
                    aggregate ??= CreateDefault(evt);
                    aggregate = _incidentShortInfoProjection.Apply(event_IncidentClosed52.Data, aggregate);
                    return aggregate;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.IncidentLogged> event_IncidentLogged53:
                    aggregate = Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfoProjection.Create(event_IncidentLogged53.Data);
                    return aggregate;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.IncidentPrioritised> event_IncidentPrioritised47:
                    aggregate ??= CreateDefault(evt);
                    aggregate = _incidentShortInfoProjection.Apply(event_IncidentPrioritised47.Data, aggregate);
                    return aggregate;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.IncidentResolved> event_IncidentResolved50:
                    aggregate ??= CreateDefault(evt);
                    aggregate = _incidentShortInfoProjection.Apply(event_IncidentResolved50.Data, aggregate);
                    return aggregate;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.ResolutionAcknowledgedByCustomer> event_ResolutionAcknowledgedByCustomer51:
                    aggregate ??= CreateDefault(evt);
                    aggregate = _incidentShortInfoProjection.Apply(event_ResolutionAcknowledgedByCustomer51.Data, aggregate);
                    return aggregate;
            }

            return aggregate;
        }


        public Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo Create(Marten.Events.IEvent @event, Marten.IQuerySession session)
        {
            switch (@event)
            {
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.IncidentLogged> event_IncidentLogged45:
                    return Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfoProjection.Create(event_IncidentLogged45.Data);
                    break;
            }

            return null;
        }

    }

    // END: IncidentShortInfoProjectionInlineHandler944076420
    
    
}

